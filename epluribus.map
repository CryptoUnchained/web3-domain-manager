{"version":3,"sources":["app/assets/modules/github/command-palette/command-palette-mode-element.ts","app/assets/modules/github/command-palette/command-palette-tip-element.ts","app/assets/modules/github/command-palette/command-palette-token-element.ts","app/assets/modules/github/command-palette/command-palette-item-stack-element.ts","app/assets/modules/github/command-palette/providers/files-provider.ts","app/assets/modules/github/command-palette/providers/help-provider.ts","app/assets/modules/github/command-palette/providers/search-links-provider.ts","app/assets/modules/github/command-palette/providers/server-defined-provider-factory.ts","app/assets/modules/github/command-palette/server-defined-provider-element.ts","app/assets/modules/github/command-palette/command-palette-help-element.ts","app/assets/modules/github/command-palette/main-window-command.ts","app/assets/modules/github/command-palette/main-window-commands/discussion.ts","app/assets/modules/github/command-palette/main-window-commands/everywhere/switch-tab-size.ts","app/assets/modules/github/command-palette/main-window-commands/everywhere.ts","app/assets/modules/github/command-palette/main-window-commands/issue.ts","app/assets/modules/github/command-palette/main-window-commands/codespaces.ts","app/assets/modules/github/command-palette/main-window-commands/pull-request.ts","app/assets/modules/github/command-palette/main-window-commands/repository.ts","app/assets/modules/github/command-palette/providers/main-window-commands-provider.ts","app/assets/modules/github/command-palette/command-palette-input-element.ts","app/assets/modules/command-palette.ts","app/assets/modules/github/code-editor.ts","app/assets/modules/github/color-modes.ts","app/assets/modules/github/features.ts","app/assets/modules/github/subscription.ts"],"names":[],"mappings":"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","file":"command-palette-xxxxxxxxxxxx.js","sourcesContent":["import {attr, controller} from '@github/catalyst'\nimport {Scope} from './command-palette-scope-element'\n\n/**\n * <command-palette-mode> represent a mode which the command palette can operate within.\n *\n * == Attributes\n * - char: the mode character\n * - placeholder: the placeholder text to display when the command palette is in this mode\n * - scopeTypes: the scope types for when this mode is active\n */\n\nconst matchAll = '*'\n\n@controller\nexport class CommandPaletteModeElement extends HTMLElement {\n  @attr char: string\n  @attr placeholder: string\n  @attr scopeTypes = ''\n\n  /**\n   * Returns whether this mode is active for the given scope and first character.\n   *\n   * @param scope the scope to check\n   * @param firstChar the first character from the command palette input\n   */\n  active(scope: Scope, firstChar: string): boolean {\n    return this.scopeTypeMatch(scope.type) && this.modeMatch(firstChar)\n  }\n\n  scopeTypeMatch(scopeType: string) {\n    if (!this.scopeTypes) {\n      return true\n    }\n\n    return this.scopeTypes && JSON.parse(this.scopeTypes).includes(scopeType)\n  }\n\n  modeMatch(mode: string) {\n    return this.char === matchAll || this.char === mode\n  }\n\n  /**\n   * Returns the character to display for this mode.\n   */\n  character(): string {\n    return this.char === matchAll ? '' : this.char\n  }\n}\n","import {attr, controller} from '@github/catalyst'\nimport {ModeObserver} from './mode-observer'\nimport {Query} from './query'\n/**\n * <command-palette-tip> represent the hint text displayed in various empty states.\n *\n * Tips can be configured to appear when the mode, type, or value match a certain string.\n *\n * @example\n * <command-palette-tip data-value=\"say hi\">Hi there!</command-palette-tip>\n * <command-palette-tip data-mode=\">\">You are using command mode.</command-palette-tip>\n * <command-palette-tip data-match-mode=\"[^?]|^$\">You are using any mode except for the help mode.</command-palette-tip>\n * <command-palette-tip data-scope-types=\"[\\\"owner\\\",\\\"repository\\\"]\">You are scoped to an owner or a repository.</command-palette-tip>\n * <command-palette-tip data-on-empty>There are no results!</command-palette-tip>\n */\nconst matchAll = '*'\nconst undefinedRegex = ''\n\n@controller\nexport class CommandPaletteTipElement extends HTMLElement implements ModeObserver {\n  // By default, anything will match.\n  @attr scopeTypes = undefinedRegex\n  @attr mode = matchAll\n  @attr matchMode = undefinedRegex\n  @attr value = matchAll\n  @attr onEmpty = false\n  @attr onError = false\n\n  connectedCallback() {\n    this.hidden = true\n  }\n\n  available(query: Query, isEmpty = false, error = false) {\n    const available =\n      this.valueMatch(query.text) &&\n      this.scopeTypeMatch(query.scope.type) &&\n      this.modeMatch(query.mode) &&\n      this.showOnEmpty(isEmpty) &&\n      this.showOnError(error)\n\n    return available\n  }\n\n  toggle(query: Query, isEmpty = false, error = false) {\n    this.hidden = !this.available(query, isEmpty, error)\n  }\n\n  valueMatch(value: string) {\n    return this.value === matchAll || this.value === value\n  }\n\n  scopeTypeMatch(scopeType: string) {\n    return (\n      this.scopeTypes !== undefinedRegex &&\n      (this.scopeTypes === matchAll || JSON.parse(this.scopeTypes).includes(scopeType))\n    )\n  }\n\n  modeMatch(mode: string) {\n    if (this.matchMode === undefinedRegex) {\n      return this.mode === matchAll || this.mode === mode\n    } else {\n      const regex = new RegExp(this.matchMode)\n      return mode.match(regex) !== null\n    }\n  }\n\n  showOnEmpty(isEmpty: boolean) {\n    if (this.onEmpty) {\n      return isEmpty\n    } else {\n      return true\n    }\n  }\n\n  showOnError(error: boolean) {\n    if (this.onError) {\n      return error\n    } else {\n      return true\n    }\n  }\n}\n","import {attr, controller} from '@github/catalyst'\n\nexport interface Token {\n  text: string\n  type: string\n  id: string\n  value: string\n}\n\n/**\n * <command-palette-token> represent a token used to build the scope UI. Each token holds attributes that can be used for querying.\n *\n * == Attributes\n * - text: The text to be shown for the token\n * - type: The type of token it is: owner or repository\n * - id: The global relay id for the token\n * - value: The value for query on descope\n */\n\n@controller\nexport class CommandPaletteTokenElement extends HTMLElement {\n  @attr type = ''\n  @attr id = ''\n  @attr text = ''\n  @attr value = ''\n}\n","/*\n  Deprecation Warning:\n  `CommandPalettePageElement` has re-implemented much of the functionality here\n  and this class will eventually be removed entirely.\n*/\n\nimport {Item, Octicon} from '@github/command-palette-api'\nimport {attr, controller, targets} from '@github/catalyst'\nimport CommandPalette from './command-palette-element'\nimport {CommandPaletteItemElement} from './command-palette-item-element'\nimport {CommandPaletteItemGroupElement} from './command-palette-item-group-element'\nimport {Query} from './query'\nimport {debounce} from '@github/mini-throttle'\n\ntype OcticonSvgs = {[name: string]: string}\n\n@controller\nexport class CommandPaletteItemStackElement extends HTMLElement {\n  @attr topGroupThreshold = 6.5\n  @attr maxHeightVh = 65\n  @attr showDebugInfo = false\n  @targets groups: CommandPaletteItemGroupElement[]\n\n  octicons: OcticonSvgs = {}\n  tryDefaultSelection = false\n  currentPath: string\n  eventListenersBound = false\n  currentHeight = 0\n  getQuery: () => Query\n\n  items: {\n    [id: string]: Item\n  } = {}\n\n  history: {\n    [path: string]: {[historyId: string]: number}\n  } = {}\n\n  get commandPalette(): CommandPalette | null {\n    return this.closest<CommandPalette>('command-palette')\n  }\n\n  connectedCallback() {\n    this.classList.add('rounded-bottom-2')\n\n    // Read octicons from the page. This is required so local providers can have icons.\n    // Delete this once PageStack is fully shipped. PageStack re-implements this.\n    if (this.commandPalette && !this.commandPalette.multiPageEnabled) {\n      /* eslint-disable-next-line custom-elements/no-dom-traversal-in-connectedcallback */\n      const localOcticonContainer = this.commandPalette.querySelector('.js-command-local-provider-octicons')\n      if (localOcticonContainer) {\n        /* eslint-disable-next-line custom-elements/no-dom-traversal-in-connectedcallback */\n        const octiconsArray = Array.from(localOcticonContainer.children).map(octiconElement => {\n          return {\n            id: octiconElement.getAttribute('data-local-provider-octicon-id'),\n            /* eslint-disable-next-line custom-elements/no-dom-traversal-in-connectedcallback */\n            svg: octiconElement.innerHTML\n          } as Octicon\n        })\n\n        this.commandPalette.cacheIcons(octiconsArray)\n      }\n    }\n  }\n\n  get selectedItem(): CommandPaletteItemElement | undefined {\n    return this.findSelectedElement()\n  }\n\n  set selectedItem(newSelection: CommandPaletteItemElement | undefined) {\n    const currentlySelected = this.findSelectedElement()\n\n    if (currentlySelected) {\n      currentlySelected.selected = false\n    }\n\n    if (newSelection) {\n      newSelection.selected = true\n      this.selectedItemChanged(newSelection.item)\n    }\n  }\n\n  get selectedItemIsTopResult(): boolean {\n    const topGroup = this.findGroup(CommandPaletteItemGroupElement.topGroupId)\n\n    if (topGroup && topGroup.itemNodes.length > 0) {\n      return topGroup.firstItem.itemId === this.selectedItem?.itemId\n    }\n\n    return false\n  }\n\n  findSelectedElement(): CommandPaletteItemElement | undefined {\n    return this.querySelector<CommandPaletteItemElement>('command-palette-item[data-selected]')!\n  }\n\n  navigate(indexDiff: number) {\n    this.tryDefaultSelection = false\n    const movingDownward = indexDiff > 0\n\n    const scrollOptions = {\n      behavior: 'smooth',\n      block: 'nearest'\n    } as ScrollIntoViewOptions\n\n    if (this.selectedItem) {\n      let next\n\n      if (movingDownward) {\n        next = this.selectedItem?.nextElementSibling as CommandPaletteItemElement\n      } else {\n        next = this.selectedItem?.previousElementSibling as CommandPaletteItemElement\n      }\n\n      if (next) {\n        this.selectedItem = next\n        this.selectedItem.scrollIntoView(scrollOptions)\n      } else if (this.selectedItem) {\n        // move to next/previous visible group\n        const nextGroup = this.visibleGroups[this.calculateIndex(indexDiff)]\n        nextGroup.scrollIntoView(scrollOptions)\n\n        if (movingDownward) {\n          this.selectedItem = nextGroup.firstItem\n        } else {\n          this.selectedItem = nextGroup.lastItem\n        }\n      }\n    } else {\n      this.selectedItem = this.firstItem\n    }\n  }\n\n  /**\n   * Calculate a valid index by adding a number (positive or negative). If the\n   * index goes out of bounds, it is moved into bounds again.\n   *\n   * For example, if you have 3 items and the current index is 1.\n   * - When you pass 1, it will return 2.\n   * - When you pass 2, it will return 0.\n   * - When you pass -2, it will return 2.\n   *\n   * JavaScript modulo operator doesn't handle negative numbers the same as\n   * positive numbers so we have to do some additional work in the last line.\n   *\n   * @param indexDiff a positive or negative number\n   * @returns new index (always in bound)\n   */\n  calculateIndex(indexDiff: number) {\n    let currentIndex = this.visibleGroups.findIndex(group => group.groupId === this.selectedItem?.item.group)\n\n    if (this.findGroup(CommandPaletteItemGroupElement.topGroupId)?.firstItem === this.selectedItem) {\n      currentIndex = 0\n    }\n\n    const newIndexUnbounded = currentIndex + indexDiff\n    const length = this.visibleGroups.length\n    return ((newIndexUnbounded % length) + length) % length\n  }\n\n  historyItems(path: string) {\n    if (!this.history[path]) {\n      this.history[path] = {}\n    }\n\n    return this.history[path]\n  }\n\n  addItemToHistory(queryText: string, queryPath: string, item: Item) {\n    const history = this.historyItems(queryPath)\n    const newScore = item.calculateScore(queryText)\n\n    history[item.id] = newScore\n  }\n\n  addItems(itemQuery: Query, newItems: Item[], prefillStack = false) {\n    for (const item of newItems) {\n      this.addItemToHistory(itemQuery.text, itemQuery.path, item)\n      this.items[item.id] = item\n\n      // `prefillStack` is only true for pre-fetched providers\n      if (prefillStack) {\n        this.prefillHistory(item, itemQuery)\n      }\n    }\n\n    debounce(this.renderCurrentItems.bind(this), this.debounceWait)()\n  }\n\n  /**\n   * Removes an item from the items collection.\n   *\n   * @returns boolean - whether the item was removed or not\n   */\n  removeItem(item: Item) {\n    return delete this.items[item.id]\n  }\n\n  /**\n   * Removes a set of items from the items collection.\n   *\n   * @returns Array<{item: Item; removed: boolean}> - an array of objects which specify which\n   *          objects were removed from history.\n   */\n  removeItems(items: Item[]) {\n    const removedItems = items.map(item => {\n      return {\n        item,\n        removed: this.removeItem(item)\n      }\n    })\n\n    debounce(this.renderCurrentItems.bind(this), this.debounceWait)()\n    return removedItems\n  }\n\n  // Takes an item and automatically pushes it to all of its hypothetical query paths, so that it is immediately available as the user keeps typing.\n  // Example: a result with the title of \"acme, inc.\" would get pushed into the result stack for paths of potential queries such as \"a\", \"ac\", \"acm\", etc...\n  prefillHistory(item: Item, query: Query) {\n    for (const title of item.matchingFields) {\n      const maxCharsToPrefill = 15 // don't wanna get too crazy with how much we're prefilling here. 15 chars is plenty.\n      const limit = Math.min(title.length, maxCharsToPrefill)\n\n      for (let char = 0; char <= limit; char++) {\n        const queryText = title.slice(0, char)\n\n        this.addItemToHistory(queryText, query.buildPath(query, queryText), item)\n      }\n    }\n  }\n\n  // When prefilling is enabled, we don't need as much of a debounce wait\n  get debounceWait(): number {\n    return 16\n  }\n\n  renderCurrentItems() {\n    const currentQuery = this.getQuery().immutableCopy()\n    if (this.currentPath !== currentQuery.path) {\n      // the path has changed, start fresh\n      this.reset()\n    }\n\n    const items = [...this.currentItems]\n\n    if (currentQuery.isPresent() && items.length > 0) {\n      // fill top results from the highest sorted\n      const topGroup = this.findGroup(CommandPaletteItemGroupElement.topGroupId)\n\n      for (let i = 0; topGroup && i < topGroup.limit; i++) {\n        const topItem = items[i]\n\n        const score = topItem.calculateScore(currentQuery.queryText)\n        const topItemScore = topItem.priority + score\n\n        if (topItem && topItemScore > this.topGroupThreshold) {\n          this.renderItem(items.shift()!, CommandPaletteItemGroupElement.topGroupId)\n        }\n      }\n    }\n\n    this.renderItems(items)\n    this.updateSelectedItem()\n    this.itemsUpdated()\n  }\n\n  itemsUpdated() {\n    const event = new CustomEvent('itemsUpdated', {\n      cancelable: true,\n      detail: {\n        items: this.currentItems,\n        queryPath: this.getQuery().immutableCopy().path\n      }\n    })\n\n    return this.dispatchEvent(event)\n  }\n\n  selectedItemChanged(item: Item) {\n    const event = new CustomEvent('selectedItemChanged', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        item,\n        isDefaultSelection: this.tryDefaultSelection\n      }\n    })\n\n    return this.dispatchEvent(event as CustomEvent)\n  }\n\n  renderItems(items: Item[]) {\n    for (const item of items) {\n      this.renderItem(item, item.group)\n    }\n\n    this.setGroupBorders()\n    this.setMaxHeight()\n  }\n\n  // sort of like using CSS vh units, we set the max height of the results container to be a % the height of the viewport\n  get maximumHeight(): number {\n    const maximumPixelHeight = 475\n    const percentage = 50 // the item stack should never be more than X% of the viewport height\n    const percentagePixels = window.innerHeight * (percentage / 100)\n\n    return Math.min(percentagePixels, maximumPixelHeight)\n  }\n\n  get innerContentHeight(): number {\n    let height = 0\n\n    for (const child of this.children) {\n      const el = child as HTMLElement\n      const style = getComputedStyle(el)\n      const marginTop = parseInt(style.marginTop.replace('px', ''), 10)\n      const marginBottom = parseInt(style.marginBottom.replace('px', ''), 10)\n      const totalHeight = el.offsetHeight + marginTop + marginBottom\n\n      if (el.offsetHeight > 0) {\n        height += totalHeight\n      }\n    }\n\n    return height\n  }\n\n  // setting the max (& min) height of the item stack will trigger a CSS transition\n  // to smoothly animate as results are added and removed\n  setMaxHeight() {\n    // we disable the transition if the height change is too drastic (X% of max height)\n    const distanceThresholdPercentage = 0.6\n    const distanceThreshold = this.maximumHeight * distanceThresholdPercentage\n\n    const newHeight = Math.round(Math.min(this.maximumHeight, this.innerContentHeight))\n    const diff = Math.abs(this.currentHeight - newHeight)\n\n    if (diff > distanceThreshold) {\n      this.classList.add('no-transition')\n    } else {\n      this.classList.remove('no-transition')\n    }\n\n    this.setAttribute('style', `max-height:${newHeight}px; min-height:${newHeight}px;`)\n    this.currentHeight = newHeight\n  }\n\n  // Semi-hacky way to remove the top border from the first visible group,\n  // but ensure that the other groups still have their top borders.\n  // This could possibly be achieved with a CSS selector?\n  setGroupBorders() {\n    if (this.visibleGroups.length > 0) {\n      this.visibleGroups[0].classList.remove('border-top')\n\n      for (const group of this.visibleGroups) {\n        const i = this.visibleGroups.indexOf(group)\n\n        if (i === 0) {\n          group.classList.remove('border-top')\n\n          if (group.header) {\n            group.classList.remove('py-2')\n            group.classList.add('mb-2', 'mt-3')\n          }\n        } else {\n          group.classList.add('border-top')\n\n          if (group.header) {\n            group.classList.remove('mb-2', 'mt-3')\n            group.classList.add('py-2')\n          }\n        }\n      }\n    }\n  }\n\n  createItemElementAndRender(item: Item, selected: boolean, queryText: string): CommandPaletteItemElement {\n    const element = new CommandPaletteItemElement()\n    element.setItemAttributes(item)\n    element.render(selected, queryText)\n\n    return element\n  }\n\n  renderItem(item: Item, groupId: string = CommandPaletteItemGroupElement.defaultGroupId) {\n    const groupElement = this.findGroup(groupId)\n\n    if (!groupElement) {\n      return\n    }\n\n    if (\n      (groupElement.hasItem(item) || groupElement.atLimit || this.topGroup?.hasItem(item)) &&\n      !groupElement?.topGroup\n    ) {\n      return\n    }\n\n    const renderedItem = this.createItemElementAndRender(item, false, this.getQuery().immutableCopy().queryText)\n\n    if (this.showDebugInfo) {\n      // sets a data-score attribute on the element that can be viewed in the browser's web inspector,\n      // ...helpful for debugging result quality in production\n      renderedItem.score = item.score\n    }\n\n    groupElement.push(renderedItem)\n\n    const itemElement = renderedItem.containerElement\n\n    if (itemElement) {\n      const position = groupElement.list.children.length.toString()\n      item.position = position\n    }\n\n    // we can only render icons after the item has been added to the DOM.\n    // - this can be improved!\n    if (item.icon) {\n      if (item.icon.type === 'octicon') {\n        const iconSvg = this.octicons[item.icon.id!]\n        const fallbackIconSvg = this.octicons['dash-color-fg-muted']\n\n        renderedItem.renderOcticon(iconSvg || fallbackIconSvg)\n      } else if (item.icon.type === 'avatar') {\n        renderedItem.renderAvatar(item.icon.url!, item.icon.alt!)\n      }\n    } else {\n      renderedItem.iconElement.hidden = true\n    }\n\n    renderedItem.addEventListener('mousemove', e => {\n      const moved = e.movementX !== 0 || e.movementY !== 0\n\n      if (moved && this.selectedItem !== renderedItem) {\n        this.tryDefaultSelection = false\n        this.selectedItem = renderedItem\n      }\n    })\n  }\n\n  findGroup(groupId: string): CommandPaletteItemGroupElement | undefined {\n    return this.groups.find(g => g.groupId === groupId)\n  }\n\n  get topGroup() {\n    return this.findGroup(CommandPaletteItemGroupElement.topGroupId)\n  }\n\n  get groupIds() {\n    return this.groups.map(g => g.groupId)\n  }\n\n  updateSelectedItem() {\n    // Reset selected item if it is no longer in the list\n    if (this.isSelectedItemInvalid()) {\n      this.clearSelection()\n    }\n\n    if (this.setDefaultSelection()) {\n      this.selectedItem = this.firstItem\n    }\n  }\n\n  setDefaultSelection() {\n    const inScopeOrSearch = this.getQuery().hasScope() || this.getQuery().isPresent()\n    return this.tryDefaultSelection && inScopeOrSearch\n  }\n\n  noItemSelected() {\n    return !this.selectedItem || this.isSelectedItemInvalid()\n  }\n\n  isSelectedItemInvalid() {\n    return !this.currentItems.some(item => item.id === this.selectedItem?.itemId)\n  }\n\n  isEmpty() {\n    return !this.currentItems || this.currentItems.length === 0\n  }\n\n  clearSelection() {\n    this.selectedItem = undefined\n  }\n\n  /**\n   * Clears the ItemStack's `items` and `history`. Also, calls `reset` which prepares each group for\n   * new items.\n   */\n  clear() {\n    this.history = {}\n    this.items = {}\n    this.reset()\n  }\n\n  /**\n   * Prepares each group for new items as well as resets the default selection and the `currentPath`.\n   */\n  reset() {\n    this.tryDefaultSelection = true\n    this.currentPath = this.getQuery().immutableCopy().path\n\n    for (const group of this.groups) {\n      group.prepareForNewItems()\n    }\n  }\n\n  /**\n   * Clears the ItemStack of specific group and related item data only. Triggers a re-render.\n   *\n   * @param groupIds The groups to clear.\n   */\n  clearItemsFor(groupIds: string[]) {\n    const groups = this.groups.filter(group => groupIds.includes(group.groupId))\n    for (const group of groups) {\n      group.prepareForNewItems()\n    }\n\n    const items = Object.values(this.items).filter(item => item.group && groupIds.includes(item.group))\n\n    this.removeItems(items)\n  }\n\n  get visibleGroups(): CommandPaletteItemGroupElement[] {\n    return this.groups.filter(g => !g.hidden)\n  }\n\n  get firstItem(): CommandPaletteItemElement | undefined {\n    const visibleGroups = this.visibleGroups\n\n    if (visibleGroups.length > 0) {\n      return visibleGroups[0].querySelector<CommandPaletteItemElement>('command-palette-item')!\n    }\n  }\n\n  /**\n   * Returns the list of items matching the current query.\n   * Also, efficiently prunes items from history when they no longer exist.\n   */\n  get currentItems(): Item[] {\n    const query = this.getQuery().immutableCopy()\n    const history = this.historyItems(query.path)\n\n    const items = Object.entries(history)\n      .map(([historyId, score]) => {\n        const item = this.items[historyId]\n\n        if (item) {\n          // set the score to the one that was pre-calculated in history\n          item.score = score\n          return item\n        } else {\n          // prune the item from history since it no longer exists\n          delete history[historyId]\n          return null\n        }\n      })\n      .filter((i): i is Item => i !== null)\n\n    if (!items) {\n      return []\n    }\n\n    if (query.isBlank()) {\n      // use default sort order returned from server when no query is present\n      return items.sort((a, b) => b.priority - a.priority)\n    } else {\n      return items.sort((a, b) => b.score - a.score || b.priority - a.priority)\n    }\n  }\n\n  disconnectedCallback() {\n    this.unbindListeners()\n  }\n\n  bindListeners() {\n    // we can't use ResizeObserver because we're actively\n    // resizing this element when we `setMaxHeight`.\n\n    if (!this.eventListenersBound) {\n      // eslint-disable-next-line github/prefer-observers\n      window.addEventListener('resize', this.setMaxHeight.bind(this))\n      this.eventListenersBound = true\n    }\n  }\n\n  unbindListeners() {\n    window.removeEventListener('resize', this.setMaxHeight.bind(this))\n    this.eventListenersBound = false\n  }\n}\n","import {AccessPolicyItem} from '../items/access-policy-item'\nimport {JumpToItem} from '../items/jump-to-item'\nimport {PrefetchedProvider} from './prefetched-provider'\nimport {Query} from '../query'\nimport {ServerDefinedItem} from '../items/server-defined-item'\n\n/**\n * This is a special prefetched provider that supports linking to file line\n * numbers using the `:123` syntax. This happens in the browser.\n *\n */\n\nexport class FilesProvider extends PrefetchedProvider {\n  /**\n   * Fetch results from server and serialize into JumpToItems using file paths.\n   */\n  async fetchSrc(query: Query) {\n    if (!this.src) throw new Error('No src provided')\n\n    const url = new URL(this.src, window.location.origin)\n    url.search = query.params().toString()\n    const response = await fetch(url.toString(), {\n      headers: {\n        Accept: 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    })\n\n    const data = await response.json()\n    if (!data.results) return\n\n    const results = data.results[0]\n\n    if (results['base_file_path']) {\n      const baseFilePath = results['base_file_path'] as string\n      const filePaths = results.paths as string[]\n      data.results = filePaths.map(file => {\n        return JumpToItem.from({\n          title: file,\n          path: `${baseFilePath}/${file}`,\n          icon: 'file-color-fg-muted',\n          group: 'files'\n        })\n      })\n    } else if (results['action'] && results.action.type === 'access_policy') {\n      data.results = [new AccessPolicyItem(results)]\n    } else {\n      data.results = []\n    }\n\n    return data\n  }\n\n  async fetch(query: Query, isEmpty = false) {\n    const endsWithLineNumberMatch = query.text.match(/(.+):(\\d*)\\s*$/)\n\n    if (endsWithLineNumberMatch) {\n      return this.fetchWithLineNumbers(query, endsWithLineNumberMatch)\n    } else {\n      return super.fetch(query, isEmpty)\n    }\n  }\n\n  /**\n   * Build and return a list of items that link to a line number in a file. This\n   * relies on super.fetch to return items matching the query without the line\n   * number and then appends the line number afterwards.\n   *\n   * @param query\n   * @param endsWithLineNumberMatch\n   * @returns list of file jump to items linking to a line number\n   */\n  async fetchWithLineNumbers(query: Query, endsWithLineNumberMatch: RegExpMatchArray) {\n    const newQueryText = endsWithLineNumberMatch[1]\n    const lineNumber = endsWithLineNumberMatch[2]\n    const queryWithoutLineNumber = new Query(newQueryText, query.mode, {scope: query.scope})\n\n    const items = [] as ServerDefinedItem[]\n    const superItems = (await super.fetch(queryWithoutLineNumber, false)).results\n    for (const item of superItems) {\n      if (item instanceof JumpToItem) {\n        items.push(this.convert(item, lineNumber))\n      }\n    }\n\n    return {results: items}\n  }\n\n  /**\n   * This takes an item and returns a new one with a line number attached. This\n   * builds a new item, it doesn't mutate the original.\n   *\n   * If the line number is empty or the item isn't a JumpToItem, the same item is\n   * returned.\n   *\n   * @param item to be converted\n   * @param lineNumber to append to item\n   * @returns item with line number append, if appropriate\n   */\n  convert(item: ServerDefinedItem, lineNumber: string) {\n    if (lineNumber === '') return item\n    if (!(item instanceof JumpToItem)) return item\n\n    item.title = `${item.title}:${lineNumber}`\n    item.action.path = `${item.action.path}#L${lineNumber}`\n\n    return item\n  }\n}\n","import {CommandPaletteHelpElement} from '../command-palette-help-element'\nimport {Query} from '../query'\nimport {ServerDefinedItem} from '../items/server-defined-item'\nimport {ServerDefinedProvider} from './server-defined-provider'\n\n/**\n * Provides links to search a repository, an organization/user, or all of GitHub.\n */\nexport class HelpProvider extends ServerDefinedProvider {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  enabledFor(_query: Query): boolean {\n    return true\n  }\n\n  clearCache(): void {\n    // nothing\n  }\n\n  get hasCommands(): boolean {\n    return false\n  }\n\n  get debounce() {\n    return 0\n  }\n\n  async fetch(query: Query, isEmpty = false) {\n    if (query.mode === '?' || isEmpty) {\n      const helpElements = Array.from(this.element.querySelectorAll<CommandPaletteHelpElement>('command-palette-help'))\n      const helpItems = helpElements\n        .filter(helpElement => helpElement.show(query))\n        .map((helpElement, index) => helpElement.toItem(index))\n\n      return {results: helpItems} as {results: ServerDefinedItem[]}\n    } else {\n      return {results: []} as {results: ServerDefinedItem[]}\n    }\n  }\n}\n","import {Query} from '../query'\nimport {SearchLinkItem} from '../items/search-link-item'\nimport {ServerDefinedItem} from '../items/server-defined-item'\nimport {ServerDefinedProvider} from './server-defined-provider'\n\n/**\n * Provides links to search a repository, an organization/user, or all of GitHub.\n */\nexport class SearchLinksProvider extends ServerDefinedProvider {\n  enabledFor(query: Query): boolean {\n    if (query.isBlank() || query.mode === '?' || query.mode === '>') {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  clearCache(): void {\n    // nothing\n  }\n\n  get hasCommands(): boolean {\n    return false\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async fetch(query: Query, _isEmpty = false) {\n    return {results: [SearchLinkItem.create(query)]} as {results: ServerDefinedItem[]}\n  }\n}\n","import {FilesProvider} from './files-provider'\nimport {HelpProvider} from './help-provider'\nimport {PrefetchedProvider} from './prefetched-provider'\nimport {RemoteProvider} from './remote-provider'\nimport {SearchLinksProvider} from './search-links-provider'\nimport {ServerDefinedProvider} from './server-defined-provider'\nimport {ServerDefinedProviderElement} from '../server-defined-provider-element'\n\n/**\n * A factory for creating server defined providers.\n */\nexport class ServerDefinedProviderFactory {\n  /**\n   * A map of provider server provided types to their provider class.\n   */\n  static providers: {[key: string]: typeof ServerDefinedProvider} = {\n    remote: RemoteProvider,\n    prefetched: PrefetchedProvider,\n    files: FilesProvider,\n    help: HelpProvider,\n    'search-links': SearchLinksProvider\n  }\n\n  /**\n   * Creates a `ServerDefinedProvider` subclass based on the properties in a `ServerDefinedProviderElement`.\n   * Uses `type` to map to a provider class using `ServerDefinedProviderFactory.providers`.\n   * @param properties: A `ServerDefinedProviderElement`\n   * @returns a `ServerDefinedProvider` created from the properties.\n   */\n  static create(properties: ServerDefinedProviderElement): ServerDefinedProvider {\n    const providerClass = this.providers[properties.type]\n    if (!providerClass) {\n      throw new Error(`Unknown provider type: ${properties.type}`)\n    }\n    return new providerClass(properties)\n  }\n}\n","import {ServerDefinedProvider, ServerDefinedProviderProperties} from './providers/server-defined-provider'\nimport {attr, controller} from '@github/catalyst'\nimport {ProviderElement} from './provider-element'\nimport {ServerDefinedProviderFactory} from './providers/server-defined-provider-factory'\n\n/**\n * This is a custom element that can be used to hold a the configuration for a server defined provider. This is useful for\n * when we want to define proprties of a provider on the server to be used on the client.\n * @example:\n * <server-defined-provider\n *  type=\"remote\"\n *  src=\"/command_palette/providers/page_navigation\"\n *  data-supported-modes=\"[\"\"]\"\n *  scope-types=\"[\"\", \"owner\", \"repo\"]\"\n * ></server-defined-provider>\n */\n@controller\nexport class ServerDefinedProviderElement extends ProviderElement implements ServerDefinedProviderProperties {\n  // REQUIRED: Expects the provider ID.\n  // See the possible provider IDs in `ServerDefinedProviderFactory.providers`\n  @attr type: string\n\n  // REQUIRED: Expects a JSON string of supported modes.\n  @attr supportedModes: string\n\n  // REQUIRED: Expects a Number string representing the fetch debounce in milliseconds.\n  @attr fetchDebounce: string\n\n  // OPTIONAL: Expects a JSON string of scope types.\n  @attr supportedScopeTypes: string\n\n  // OPTIONAL: Expects a string path to make fetches to.\n  @attr src: string\n\n  // OPTIONAL: Whether the provider supports command items.\n  @attr supportsCommands: boolean\n\n  private _wildcard = '*'\n  private _modes: string[]\n  private _scopeTypes: string[]\n\n  provider: ServerDefinedProvider\n\n  // Mark: - Getters\n\n  get debounce(): number {\n    return parseInt(this.fetchDebounce, 10)\n  }\n\n  get hasCommands(): boolean {\n    return this.supportsCommands\n  }\n\n  get hasWildCard(): boolean {\n    return this.modes.includes(this._wildcard)\n  }\n\n  get modes(): string[] {\n    if (this.supportedModes === '') {\n      this._modes = ['']\n    }\n\n    if (!this._modes) {\n      this._modes = JSON.parse(this.supportedModes)\n    }\n\n    return this._modes\n  }\n\n  get scopeTypes(): string[] {\n    if (this.supportedScopeTypes === '') {\n      return []\n    }\n\n    if (!this._scopeTypes) {\n      this._scopeTypes = JSON.parse(this.supportedScopeTypes)\n    }\n\n    return this._scopeTypes\n  }\n\n  // Mark: - Setup\n\n  connectedCallback(): void {\n    this.provider = ServerDefinedProviderFactory.create(this)\n  }\n}\n","import {attr, controller, target} from '@github/catalyst'\nimport {HelpItem} from './items/help-item'\nimport {Query} from './query'\n/**\n * <command-palette-help> elements represent a help item's content. When added inside the help provider,\n * they will be displayed in the help mode.\n *\n * Help items can be configured to appear when their scopeType arrays match a certain scope.\n *\n * @example\n * <command-palette-provider data-type=\"help\" data-mode=\"*\">\n *   <command-palette-help data-prefix=\"#\" data-scope-types=\"[\\\"owner\\\",\\\"repository\\\"]\">\n *     <span data-target=\"command-palette-help.titleElement\">Search for issues</span>\n *     <span data-target=\"command-palette-help.hintElement\"><code>#</code></span>\n *   </command-palette-help>\n * </command-palette-provider>\n */\n\n@controller\nexport class CommandPaletteHelpElement extends HTMLElement {\n  @attr group: string\n  @attr prefix: string\n  @attr scopeTypes: string\n\n  @target titleElement: HTMLElement\n  @target hintElement: HTMLElement\n\n  connectedCallback() {\n    this.hidden = true\n  }\n\n  show(query: Query): boolean {\n    return this.isEnabledScopeType(query)\n  }\n\n  isEnabledScopeType(query: Query): boolean {\n    if (!this.scopeTypes) {\n      return true\n    }\n\n    return this.scopeTypes && JSON.parse(this.scopeTypes).includes(query.scope.type)\n  }\n\n  toItem(index: number) {\n    const args: {title: string; group: string; prefix?: string; index: number; persistentHint?: string} = {\n      group: this.group,\n      title: this.titleElement.innerHTML,\n      index\n    }\n    if (this.prefix) {\n      args.prefix = this.prefix\n    }\n    if (this.hintElement.textContent) {\n      args.persistentHint = this.hintElement.innerHTML\n    }\n    return HelpItem.from(args)\n  }\n}\n","import CommandPalette from './command-palette-element'\nimport {MainWindowCommandItem} from './items/main-window-command-item'\nimport {Query} from '@github/command-palette-api'\n\n/* Set to a CommandPalette::Icons::Octicon#id */\ntype CommandPaletteOcticonId = string\n\n/**\n * Inherit from this class to create a new main window command.\n */\nexport class MainWindowCommand {\n  static item(overrides = {}) {\n    return new MainWindowCommandItem(new this(), overrides)\n  }\n\n  title: string\n  subtitle: string\n  icon: CommandPaletteOcticonId\n  iconType = 'octicon'\n  group = 'commands'\n  priority = 0\n  dismissAfterRun = true\n  select?(commandPalette: CommandPalette): void\n\n  /**\n   * Called when the command is executed.\n   * @param _commandPalette\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  run(_commandPalette: CommandPalette) {\n    new Error('Not implemented')\n  }\n\n  /**\n   * Called before showing the command in the command palette.\n   *\n   * This can be used to check if this command can be run against the subject.\n   * For example, if you're writing a command that presses a button, you can\n   * check if that button is present on the page. If it isn't, return false to\n   * hide this command. You can also check against the query, which is provided.\n   *\n   * @returns true if command applies to the current page\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isApplicable(_query: Query) {\n    return true\n  }\n}\n\nexport class MainWindowGlobalCommand extends MainWindowCommand {\n  group = 'global_commands'\n}\n","/**\n * This file contains main window commands for issues.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {MainWindowCommand} from '../main-window-command'\n\nclass DeleteDiscussion extends MainWindowCommand {\n  title = 'Delete discussion…'\n  icon = 'trash-color-fg-muted'\n\n  get deleteButton() {\n    return document.querySelector<HTMLButtonElement>('button#dialog-show-delete-discussion')\n  }\n\n  get dialogElement() {\n    return document.querySelector<HTMLElement>('#delete-discussion')\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-delete-discussion-details')\n  }\n\n  isApplicable() {\n    return this.deleteButton != null || this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  run() {\n    const deleteDiscussionsButton = this.deleteButton\n    if (deleteDiscussionsButton) {\n      deleteDiscussionsButton.click()\n      setTimeout(() => {\n        this.dialogElement?.querySelector<HTMLButtonElement>('button[type=\"submit\"]')?.focus()\n      }, 0)\n      return\n    }\n\n    const deleteDiscussionsDetails = this.fetchDetails()\n    if (deleteDiscussionsDetails) {\n      deleteDiscussionsDetails.open = true\n      setTimeout(() => {\n        deleteDiscussionsDetails?.querySelector<HTMLButtonElement>('button[type=\"submit\"]')?.focus()\n      }, 0)\n    }\n  }\n}\n\nclass EditDiscussion extends MainWindowCommand {\n  title = 'Edit discussion body'\n  icon = 'pencil-color-fg-muted'\n\n  get editButton() {\n    return document.querySelector<HTMLDetailsElement>('.js-discussions-comment-edit-button')\n  }\n\n  isApplicable() {\n    return this.editButton != null\n  }\n\n  run() {\n    this.editButton?.click()\n  }\n}\n\nclass TransferDiscussion extends MainWindowCommand {\n  title = 'Transfer discussion…'\n  icon = 'arrow-right-color-fg-muted'\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-transfer-discussion-details')\n  }\n\n  isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  run() {\n    const transferDiscussionDetails = this.fetchDetails()\n\n    if (transferDiscussionDetails) {\n      const focusMenu = () => {\n        setTimeout(() => {\n          transferDiscussionDetails?.querySelector<HTMLElement>('[data-menu-button]')?.focus()\n        }, 0)\n      }\n\n      transferDiscussionDetails.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n\n      transferDiscussionDetails.open = true\n      focusMenu()\n    }\n  }\n}\n\nexport default [DeleteDiscussion, TransferDiscussion, EditDiscussion]\n","import {MainWindowCommand, MainWindowGlobalCommand} from '../../main-window-command'\nimport CommandPalette from '../../command-palette-element'\nimport {MainWindowCommandItem} from '../../items/main-window-command-item'\nimport {StaticItemsPage} from '@github/command-palette-api'\nimport {isFeatureEnabled} from '../../../features'\n\n/**\n * Allow users to configure their tab size rendering preference.\n * Valid values are 2, 3, 4, 6, 8, 10, and 12\n *\n */\nclass TabSizeTwo extends MainWindowCommand {\n  /** overrides MainWindowCommand */\n  title = '2 spaces'\n  iconType = 'none'\n\n  /** used when persisting the new setting and when updating the DOM.\n   * override this for each value.*/\n  tabSize = '2'\n  group = ''\n\n  async run(commandPalette: CommandPalette) {\n    this.updateTabSize()\n    this.saveSettings(commandPalette)\n  }\n\n  /**\n   * Updates all the `[data-tab-size]` attributes we can find in the DOM to reflect\n   * tabSize\n   */\n  updateTabSize() {\n    const targets = document.querySelectorAll('[data-tab-size]')\n    for (const target of targets) {\n      target.setAttribute('data-tab-size', this.tabSize)\n    }\n  }\n\n  async saveSettings(commandPalette: CommandPalette) {\n    const csrfToken = document.querySelector<HTMLInputElement>('.js-tab-size-csrf')!.value\n    const path = document.querySelector<HTMLInputElement>('.js-tab-size-path')!.value\n    const formData = new FormData()\n\n    formData.set('tab_size_rendering_preference', this.tabSize)\n\n    // eslint-disable-next-line i18n-text/no-en\n    const errorMessage = 'Failed to save tab size preference'\n\n    try {\n      const response = await fetch(path, {\n        method: 'PUT',\n        body: formData,\n        mode: 'same-origin',\n        headers: {\n          'Scoped-CSRF-Token': csrfToken,\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      })\n      if (response.ok) {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Tab size rendering updated')\n      } else {\n        commandPalette.displayFlash('error', errorMessage)\n      }\n    } catch {\n      commandPalette.displayFlash('error', errorMessage)\n    }\n  }\n}\nclass TabSizeThree extends TabSizeTwo {\n  title = '3 spaces'\n  tabSize = '3'\n}\nclass TabSizeFour extends TabSizeTwo {\n  title = '4 spaces'\n  tabSize = '4'\n}\nclass TabSizeSix extends TabSizeTwo {\n  title = '6 spaces'\n  tabSize = '6'\n}\nclass TabSizeEight extends TabSizeTwo {\n  title = '8 spaces'\n  tabSize = '8'\n}\nclass TabSizeTen extends TabSizeTwo {\n  title = '10 spaces'\n  tabSize = '10'\n}\nclass TabSizeTwelve extends TabSizeTwo {\n  title = '12 spaces'\n  tabSize = '12'\n}\n\nexport class SwitchTabSize extends MainWindowGlobalCommand {\n  title = 'Change tab size rendering'\n  icon = 'gear-color-fg-muted'\n  priority = 10\n  dismissAfterRun = false\n\n  isApplicable() {\n    return isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE') && isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE_COMMANDS')\n  }\n\n  run(commandPalette: CommandPalette) {\n    commandPalette.pushPage(new StaticItemsPage(this.title, 'tab-sizes', this.pageItems), true)\n  }\n\n  get pageItems(): MainWindowCommandItem[] {\n    return [TabSizeTwo, TabSizeThree, TabSizeFour, TabSizeSix, TabSizeEight, TabSizeTen, TabSizeTwelve].map(command =>\n      command.item()\n    )\n  }\n\n  select(commandPalette: CommandPalette) {\n    this.run(commandPalette)\n  }\n}\n","/**\n * This file contains main window commands that should appear everywhere. This\n * is useful when a command applies in many contexts. You can control when the\n * command is available to run by implementing `isApplicable`.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {ColorModeWithAuto, getClientTheme, setClientMode, setClientTheme} from '../../color-modes'\nimport {CommandPalette, StaticItemsPage} from '@github/command-palette-api'\nimport {MainWindowCommand, MainWindowGlobalCommand} from '../main-window-command'\nimport {MainWindowCommandItem} from '../items/main-window-command-item'\nimport {SwitchTabSize} from './everywhere/switch-tab-size'\nimport {isFeatureEnabled} from '../../features'\n\nclass OpenInDotDev extends MainWindowCommand {\n  title = 'Open in github.dev editor'\n  icon = 'codespaces-color-fg-muted'\n  priority = 10\n\n  isApplicable() {\n    return this.fetchLink() instanceof HTMLAnchorElement\n  }\n\n  fetchLink() {\n    return document.querySelector<HTMLAnchorElement>('.js-github-dev-shortcut')\n  }\n\n  run() {\n    this.fetchLink()?.click()\n  }\n}\n\nexport class SwitchTheme extends MainWindowGlobalCommand {\n  title = 'Switch theme'\n  icon = 'paintbrush-color-fg-muted'\n  priority = 9\n  dismissAfterRun = false\n\n  isApplicable() {\n    return isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE') && isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE_COMMANDS')\n  }\n\n  run(commandPalette: CommandPalette) {\n    commandPalette.pushPage(new StaticItemsPage(this.title, 'switch-theme-page-1', this.pageItems), true)\n  }\n\n  get pageItems(): MainWindowCommandItem[] {\n    return [\n      SwitchToDark.item({group: '', title: 'Default dark'}),\n      SwitchToLight.item({group: '', title: 'Default light'}),\n      SwitchToDarkDimmed.item({group: '', title: 'Dark dimmed'}),\n      SwitchToDarkHighContrast.item({group: '', title: 'Dark high contrast'}),\n      SwitchToAuto.item({group: '', title: 'Sync with system settings'})\n    ]\n  }\n\n  select(commandPalette: CommandPalette) {\n    this.run(commandPalette)\n  }\n}\n\nclass SwitchToDark extends MainWindowGlobalCommand {\n  title = 'Switch theme to default dark'\n  icon = 'moon-color-fg-muted'\n  mode: ColorModeWithAuto = 'dark'\n  theme = 'dark'\n\n  isApplicable() {\n    return !(isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE') && isFeatureEnabled('COMMAND_PALETTE_MULTI_PAGE_COMMANDS'))\n  }\n\n  applyTheme() {\n    this.loadStyles(this.theme)\n\n    if (this.mode !== 'auto') {\n      setClientTheme(this.theme, this.mode)\n    }\n    setClientMode(this.mode)\n  }\n\n  async run() {\n    // Set color theme in browser immediately to provide instantaneous response.\n    this.applyTheme()\n    this.saveSettings(this.mode, this.lightTheme, this.darkTheme)\n  }\n\n  /**\n   * Save color mode settings to server. If successful, the server settings are\n   * applied to the browser to ensure what the user sees is matches the server.\n   */\n  async saveSettings(colorMode: ColorModeWithAuto = this.mode, lightTheme?: string, darkTheme?: string) {\n    const csrfToken = document.querySelector<HTMLInputElement>('.js-color-mode-csrf')!.value\n    const path = document.querySelector<HTMLInputElement>('.js-color-mode-path')!.value\n    const formData = new FormData()\n\n    formData.set('color_mode', colorMode)\n    if (lightTheme) formData.set('light_theme', lightTheme)\n    if (darkTheme) formData.set('dark_theme', darkTheme)\n\n    const response = await fetch(path, {\n      method: 'PUT',\n      body: formData,\n      mode: 'same-origin',\n      headers: {\n        'Scoped-CSRF-Token': csrfToken,\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    })\n\n    const settings = (await response.json()) as {\n      color_mode: ColorModeWithAuto\n      light_theme: string\n      dark_theme: string\n    }\n\n    // Load theme CSS\n    this.loadStyles(settings.light_theme)\n    this.loadStyles(settings.dark_theme)\n\n    // Set theme CSS classes\n    setClientTheme(settings.light_theme, 'light')\n    setClientTheme(settings.dark_theme, 'dark')\n\n    // Set color mode classes\n    setClientMode(settings.color_mode)\n  }\n\n  loadStyles(theme: string) {\n    const linkTag = document.querySelector<HTMLLinkElement>(`link[data-color-theme='${theme}']`)\n\n    if (linkTag && !linkTag.hasAttribute('href') && linkTag.hasAttribute('data-href')) {\n      linkTag.setAttribute('href', linkTag.getAttribute('data-href')!)\n    }\n  }\n\n  get darkTheme(): string | undefined {\n    if (this.mode === 'dark') {\n      return this.theme\n    } else {\n      return getClientTheme('dark')!\n    }\n  }\n\n  get lightTheme(): string | undefined {\n    if (this.mode === 'light') {\n      return this.theme\n    } else {\n      return getClientTheme('light')!\n    }\n  }\n}\n\nclass SwitchToDarkHighContrast extends SwitchToDark {\n  title = 'Switch theme to dark high contrast'\n  theme = 'dark_high_contrast'\n}\n\nclass SwitchToDarkDimmed extends SwitchToDark {\n  title = 'Switch theme to dark dimmed'\n  theme = 'dark_dimmed'\n}\n\nclass SwitchToLight extends SwitchToDark {\n  title = 'Switch theme to default light'\n  icon = 'sun-color-fg-muted'\n  mode: ColorModeWithAuto = 'light'\n  theme = 'light'\n}\n\nclass SwitchToAuto extends SwitchToDark {\n  title = 'Switch theme settings to sync with system'\n  icon = 'sun-color-fg-muted'\n  mode: ColorModeWithAuto = 'auto'\n\n  get darkTheme() {\n    return undefined\n  }\n\n  get lightTheme() {\n    return undefined\n  }\n}\n\nclass UpdateSubscription extends MainWindowCommand {\n  constructor() {\n    super()\n    const isSubscribeCommand = this.isSubscribe()\n    this.title = `${isSubscribeCommand ? 'Subscribe' : 'Unsubscribe'}`\n    this.icon = `${isSubscribeCommand ? 'bell' : 'bell-slash'}-color-fg-muted`\n  }\n\n  isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.fetchButton()?.disabled === false\n  }\n\n  isSubscribe() {\n    return this.fetchButton()?.textContent?.trim() === 'Subscribe'\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.thread-subscribe-button')\n  }\n\n  run() {\n    this.fetchButton()?.click()\n  }\n}\n\nexport default [\n  OpenInDotDev,\n  SwitchTabSize,\n  SwitchTheme,\n  SwitchToLight,\n  SwitchToDark,\n  SwitchToDarkDimmed,\n  SwitchToDarkHighContrast,\n  SwitchToAuto,\n  UpdateSubscription\n]\n","/**\n * This file contains main window commands for issues.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {MainWindowCommand} from '../main-window-command'\n\nfunction moveCursorToEnd(input: HTMLTextAreaElement | HTMLInputElement) {\n  input.focus()\n  input.selectionStart = input.selectionEnd = input.value.length\n}\n\nexport class EditIssueBody extends MainWindowCommand {\n  title = 'Edit issue body'\n  icon = 'pencil-color-fg-muted'\n\n  issueBody() {\n    return document.querySelector('.js-command-palette-issue-body')\n  }\n\n  isIssue() {\n    return !!this.issueBody()\n  }\n\n  isApplicable() {\n    return this.isIssue()\n  }\n\n  run() {\n    // Build an edit button (the normal one isn't always loaded)\n    const editButton = document.createElement('button')\n    editButton.hidden = true\n    editButton.classList.add('js-comment-edit-button')\n\n    const issueBody = document.querySelector('div.js-comment')\n    issueBody?.appendChild(editButton)\n\n    editButton.click()\n    editButton.remove()\n\n    setTimeout(() => {\n      const textArea = issueBody?.parentElement?.querySelector<HTMLTextAreaElement>('textarea.js-comment-field')\n\n      if (textArea) {\n        moveCursorToEnd(textArea)\n      }\n    }, 0)\n  }\n}\n\nexport class EditIssueTitle extends MainWindowCommand {\n  title = 'Edit issue title'\n  icon = 'pencil-color-fg-muted'\n\n  issueBody() {\n    return document.querySelector('.js-command-palette-issue-body')\n  }\n\n  isIssue() {\n    return !!this.issueBody()\n  }\n\n  isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.isIssue()\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-title-edit-button')\n  }\n\n  run() {\n    this.fetchButton()?.click()\n\n    // Even though the input has an autofocus, it isn't focused when it is unhidden.\n    setTimeout(() => {\n      const input = document.querySelector<HTMLInputElement>('input#issue_title[autofocus]')\n\n      if (input) {\n        moveCursorToEnd(input)\n      }\n    }, 0)\n  }\n}\n\nclass TransferIssue extends MainWindowCommand {\n  title = 'Transfer issue…'\n  icon = 'arrow-right-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-transfer-issue')\n  }\n\n  run() {\n    const transferIssueDetails = this.fetchDetails()\n\n    if (transferIssueDetails) {\n      const focusMenu = () => {\n        setTimeout(() => {\n          transferIssueDetails.querySelector<HTMLElement>('[data-menu-button]')?.focus()\n        }, 0)\n      }\n\n      transferIssueDetails.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n\n      transferIssueDetails.open = true\n      focusMenu()\n    }\n  }\n}\n\nclass LockIssue extends MainWindowCommand {\n  constructor() {\n    super()\n    const isLockCommand = this.isLock()\n    this.title = `${isLockCommand ? 'Lock' : 'Unlock'} conversation`\n    this.icon = `${isLockCommand ? 'lock' : 'key'}-color-fg-muted`\n  }\n\n  isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  isLock() {\n    return document.querySelector('summary.lock-toggle-link')?.textContent?.trim() === 'Lock conversation'\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-lock-issue')\n  }\n\n  run() {\n    const lockIssueDetails = this.fetchDetails()\n    if (lockIssueDetails) {\n      lockIssueDetails.open = true\n\n      setTimeout(() => {\n        document.querySelector<HTMLSelectElement>('#unlock-reason')?.focus()\n      }, 0)\n    }\n  }\n}\n\nclass DeleteIssue extends MainWindowCommand {\n  title = 'Delete issue…'\n  icon = 'trash-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-delete-issue')\n  }\n\n  run() {\n    const deleteIssueDetails = this.fetchDetails()\n    if (deleteIssueDetails) {\n      deleteIssueDetails.open = true\n\n      setTimeout(() => {\n        deleteIssueDetails.querySelector<HTMLButtonElement>('button[type=\"submit\"]')?.focus()\n      }, 0)\n    }\n  }\n}\n\nexport class ConvertToDiscussion extends MainWindowCommand {\n  title = 'Convert issue to discussion…'\n  icon = 'comment-discussion-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchDetails() instanceof HTMLDetailsElement\n  }\n\n  fetchDetails() {\n    return document.querySelector<HTMLDetailsElement>('details.js-convert-to-discussion')\n  }\n\n  run() {\n    const convertToDiscussionDetails = this.fetchDetails()\n    if (convertToDiscussionDetails) {\n      const focusMenu = () => {\n        setTimeout(() => {\n          convertToDiscussionDetails.querySelector<HTMLElement>('[data-menu-button]')?.focus()\n        }, 0)\n      }\n\n      convertToDiscussionDetails.querySelector<HTMLElement>('include-fragment')?.addEventListener('load', focusMenu)\n\n      convertToDiscussionDetails.open = true\n      focusMenu()\n    }\n  }\n}\n\nexport default [EditIssueTitle, EditIssueBody, LockIssue, TransferIssue, DeleteIssue, ConvertToDiscussion]\n","/**\n * This file contains codespace realted main window commands.\n *\n * To add another command, define a new subclass\n * These commands can be exported to other main-wiondow-commands files to be executed on different pages\n */\nimport {MainWindowCommand} from '../main-window-command'\n\ntype Elements = {\n  codespacesForm: HTMLFormElement | null\n  codespacesTab: HTMLButtonElement | null\n  codeModal: HTMLDetailsElement | null\n  newCodespacesButton: HTMLElement | null\n}\n\nexport class OpenCodespace extends MainWindowCommand {\n  title = 'Open in new codespace'\n  icon = 'codespaces-color-fg-muted'\n  priority = 11\n\n  isApplicable() {\n    const elements = this.fetchElements()\n    return !!(elements.codeModal && elements.codespacesForm && elements.newCodespacesButton && elements.codespacesTab)\n  }\n\n  run() {\n    const {codeModal, codespacesTab, newCodespacesButton} = this.fetchElements()\n    if (!(codeModal && codespacesTab && newCodespacesButton)) return\n\n    codeModal.open = true\n    codespacesTab.click()\n\n    if (newCodespacesButton instanceof HTMLButtonElement) {\n      newCodespacesButton.click()\n    } else {\n      ;(newCodespacesButton.parentElement as HTMLDetailsElement).open = true\n\n      setTimeout(() => {\n        document.querySelector<HTMLButtonElement>('.js-create-codespace-with-sku-button')?.focus()\n      }, 0)\n    }\n  }\n\n  fetchElements(): Elements {\n    const codespacesForm = document.querySelector<HTMLFormElement>('.js-create-codespaces-form-command')\n    const codeModal = codespacesForm?.closest<HTMLDetailsElement>('details') || null\n    const codespacesTab = codeModal?.querySelector<HTMLButtonElement>('[data-tab=\"cloud\"]') || null\n    const newCodespacesButton =\n      codespacesForm?.querySelector<HTMLElement>('summary[role=\"button\"], button[type=\"submit\"]') || null\n\n    return {\n      codespacesForm,\n      codeModal,\n      codespacesTab,\n      newCodespacesButton\n    }\n  }\n}\n","/**\n * This file contains main window commands for pull requests.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport {EditIssueBody, EditIssueTitle} from './issue'\nimport ClipboardCopyElement from '@github/clipboard-copy-element'\nimport CommandPalette from '../command-palette-element'\nimport {MainWindowCommand} from '../main-window-command'\nimport {OpenCodespace} from './codespaces'\nimport {copyText} from '../copy'\n\nclass EditPullRequestBody extends EditIssueBody {\n  title = 'Edit pull request body'\n\n  pullRequestBody() {\n    return document.querySelector('.js-command-palette-pull-body')\n  }\n\n  isPullRequest() {\n    return !!this.pullRequestBody()\n  }\n\n  isApplicable() {\n    return this.isPullRequest()\n  }\n}\n\nclass EditPullRequestTitle extends EditIssueTitle {\n  title = 'Edit pull request title'\n\n  pullRequestBody() {\n    return document.querySelector('.js-command-palette-pull-body')\n  }\n\n  isPullRequest() {\n    return !!this.pullRequestBody()\n  }\n\n  isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement && this.isPullRequest()\n  }\n}\n\nclass UpdateBranch extends MainWindowCommand {\n  title = 'Update current branch'\n  icon = 'sync-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-update-branch-form button')\n  }\n\n  run() {\n    const button = this.fetchButton()\n\n    if (button) {\n      button.scrollIntoView({behavior: 'smooth', block: 'center'})\n      button.click()\n    }\n  }\n}\n\nclass ConvertToDraft extends MainWindowCommand {\n  title = 'Convert to draft'\n  icon = 'git-pull-request-draft-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchButton() instanceof HTMLButtonElement\n  }\n\n  fetchButton() {\n    return document.querySelector<HTMLButtonElement>('.js-convert-to-draft')\n  }\n\n  run() {\n    const details = this.fetchButton()?.closest<HTMLDetailsElement>('details')\n\n    if (details) {\n      details.open = true\n\n      setTimeout(() => {\n        details.querySelector<HTMLButtonElement>('.js-convert-to-draft')?.focus()\n      }, 0)\n    }\n  }\n}\n\nclass CopyBranchName extends MainWindowCommand {\n  title = 'Copy current branch name'\n  icon = 'copy-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-copy-branch')\n  }\n\n  async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Branch name copied to clipboard!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', 'Unable to copy branch name to clipboard!')\n      }\n    }\n  }\n}\n\nexport default [CopyBranchName, EditPullRequestTitle, EditPullRequestBody, UpdateBranch, ConvertToDraft, OpenCodespace]\n","/**\n * This file contains main window commands for repositories.\n *\n * To add another command, define a new subclass and append the\n * class to the default export at the bottom of the file.\n */\nimport ClipboardCopyElement from '@github/clipboard-copy-element'\nimport CommandPalette from '../command-palette-element'\nimport {MainWindowCommand} from '../main-window-command'\nimport {OpenCodespace} from './codespaces'\nimport {copyText} from '../copy'\n\nclass CopyPermalink extends MainWindowCommand {\n  title = 'Copy file permalink'\n  icon = 'copy-color-fg-muted'\n\n  isApplicable() {\n    return this.fetchPermalinkContainer() instanceof HTMLAnchorElement\n  }\n\n  fetchPermalinkContainer() {\n    return document.querySelector<HTMLAnchorElement>('.js-permalink-shortcut')\n  }\n\n  async run(commandPalette: CommandPalette) {\n    const permalinkContainer = this.fetchPermalinkContainer()\n    if (permalinkContainer) {\n      const url = `${permalinkContainer.href}${window.location.hash}`\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Copied permalink!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', 'Failed to copy permalink!')\n      }\n    }\n  }\n}\n\nclass CloneCopyHttps extends MainWindowCommand {\n  title = 'Clone repository: Copy HTTPS'\n  icon = 'copy-color-fg-muted'\n  priority = 4\n\n  isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-http')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('data-commands-path')\n  }\n\n  async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nclass CloneCopySsh extends MainWindowCommand {\n  title = 'Clone repository: Copy SSH'\n  icon = 'copy-color-fg-muted'\n  priority = 3\n\n  isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-ssh')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('data-commands-path')\n  }\n\n  async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nclass CloneCopyCli extends MainWindowCommand {\n  title = 'Clone repository: Copy GitHub CLI'\n  icon = 'copy-color-fg-muted'\n  priority = 2\n\n  isApplicable() {\n    return this.backendCommandsDisabled() && this.fetchClipboardCopy() instanceof ClipboardCopyElement\n  }\n\n  fetchClipboardCopy() {\n    return document.querySelector('.js-clone-url-gh-cli')\n  }\n\n  backendCommandsDisabled() {\n    return !!window.commandPalette && !(window.commandPalette as CommandPalette).hasAttribute('data-commands-path')\n  }\n\n  async run(commandPalette: CommandPalette) {\n    const cloneContainer = this.fetchClipboardCopy()\n    if (cloneContainer instanceof ClipboardCopyElement) {\n      const url = cloneContainer.value\n      try {\n        await copyText(url)\n\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('success', 'Clone URL copied!')\n      } catch {\n        // eslint-disable-next-line i18n-text/no-en\n        commandPalette.displayFlash('error', `Clone URL couldn't be copied`)\n      }\n    }\n  }\n}\n\nexport default [CloneCopyHttps, CloneCopySsh, CloneCopyCli, CopyPermalink, OpenCodespace]\n","import DiscussionCommands from '../main-window-commands/discussion'\nimport EverywhereCommands from '../main-window-commands/everywhere'\nimport IssueCommands from '../main-window-commands/issue'\nimport {MainWindowCommandItem} from '../items/main-window-command-item'\nimport {ProviderBase} from '../provider'\nimport PullRequestCommands from '../main-window-commands/pull-request'\nimport {Query} from '../query'\nimport RepositoryCommands from '../main-window-commands/repository'\n\n/**\n * Provides commands that run in the main window. Unlike normal commands, these have full access to the user's session.\n * They should only be used for actions that can't be accomplished using a normal command—like pressing a button in the UI.\n */\nclass MainWindowCommandsProvider extends ProviderBase {\n  enabledFor(query: Query): boolean {\n    if (query.mode === '>') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get hasCommands(): boolean {\n    return true\n  }\n\n  itemsByType: {[id: string]: MainWindowCommandItem[]} = {}\n  items: MainWindowCommandItem[] = []\n  needsFetch = true\n\n  async fetch(query: Query) {\n    this.loadCommandItems(query)\n    const filteredItems = this.fuzzyFilter<MainWindowCommandItem>(this.items, query)\n    return {results: filteredItems}\n  }\n\n  get debounce() {\n    return 0\n  }\n\n  loadCommandItems(query: Query) {\n    if (this.needsFetch) {\n      this.items = [\n        ...IssueCommands.map(command => command.item()),\n        ...PullRequestCommands.map(command => command.item()),\n        ...RepositoryCommands.map(command => command.item()),\n        ...DiscussionCommands.map(command => command.item()),\n        ...EverywhereCommands.map(command => command.item())\n      ].filter(item => item.isApplicable(query))\n      this.needsFetch = false\n    }\n  }\n\n  clearCache() {\n    this.needsFetch = true\n  }\n}\n\nif (window.commandPalette) {\n  window.commandPalette.registerProvider('main-window-commands-provider', new MainWindowCommandsProvider())\n} else {\n  window.addEventListener('command-palette-ready', () => {\n    window.commandPalette?.registerProvider('main-window-commands-provider', new MainWindowCommandsProvider())\n  })\n}\n","import {CommandPaletteScopeElement, Scope} from './command-palette-scope-element'\nimport {attr, controller, findTarget} from '@github/catalyst'\nimport {isPlatformMetaKey} from './command-palette-element'\n\n/**\n * <command-palette-input> manages top bar of the command palette, including the\n * search scope tokens, text field, typeahead, and clear button.\n *\n * == Attributes\n * - value: Sets the text field value\n * - placeholder: Sets the placeholder for the text field\n * - typeahead: Sets the typeahead value. If typeahead value starts with the text\n *              fields input (case insensitive match), it is displayed as an autocomplete.\n *              Otherwise, it is displayed after the text fields input, preceded by an en dash.\n * - scope: Sets the text in the scope UI element.\n *\n * == Events\n * - command-palette-input: Fires when the user enters text\n * - command-palette-descope: Fires when the user hits [Backspace] on an empty text field\n * - command-palette-cleared: Fires when the user clicks the clear button\n */\n\n@controller\nexport class CommandPaletteInputElement extends HTMLElement {\n  static tagName = 'command-palette-input'\n\n  static get observedAttributes() {\n    return ['value', 'typeahead', 'scope']\n  }\n\n  scopeElement: CommandPaletteScopeElement\n  defaultScope: Scope\n  input: HTMLInputElement\n  overlayInput: HTMLInputElement\n  clearButton: HTMLElement\n  searchIcon: HTMLElement\n  spinner: HTMLElement\n  typeaheadValue: string\n  setupComplete = false\n  connected = false\n\n  @attr multiPageEnabled = false\n\n  setup() {\n    this.classList.add('d-flex', 'flex-items-center', 'flex-nowrap', 'py-1', 'pl-3', 'pr-2', 'border-bottom')\n\n    this.input = this.querySelector('input.js-input')!\n    this.overlayInput = this.querySelector('input.js-overlay-input')!\n    this.clearButton = this.querySelector('.js-clear')!\n    this.scopeElement = this.querySelector<CommandPaletteScopeElement>('command-palette-scope')!\n    this.searchIcon = this.querySelector('.js-search-icon')!\n    this.spinner = this.querySelector('.js-spinner')!\n\n    this.defaultScope = this.scope\n\n    if (this.hasAttribute('autofocus')) {\n      this.input.focus()\n    }\n\n    this.clearButton.hidden = true\n\n    // Do we need to emit events at the start?\n    if (this.value.length !== 0) {\n      this._dispatchEvent('command-palette-input')\n    }\n\n    this.setupComplete = true\n  }\n\n  connectedCallback() {\n    if (!this.setupComplete) {\n      this.setup()\n    }\n\n    this.value = this.getAttribute('value') || ''\n    this.typeahead = this.getAttribute('typeahead') || ''\n    this.placeholder = this.getAttribute('placeholder') || ''\n\n    this.connected = true\n  }\n\n  attributeChangedCallback(attributeName: string, _oldValue: string, newValue: string) {\n    if (!this.input) return\n\n    if (attributeName === 'typeahead') {\n      this.typeahead = newValue\n    } else if (attributeName === 'value') {\n      this.value = newValue\n      this._dispatchEvent('command-palette-input')\n    }\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  setRemovedTokenAndSelect(text: string) {\n    if (text) {\n      this.value = text\n    }\n\n    this.focus()\n    this.input.select()\n  }\n\n  get scope() {\n    return this.scopeElement.scope\n  }\n\n  set scope(newScope: Scope) {\n    this.scopeElement.scope = newScope\n    this.clearButton.hidden = !this.hasSomethingToClear()\n  }\n\n  hasScope() {\n    return this.scopeElement.hasScope()\n  }\n\n  clearScope() {\n    return this.scopeElement.clearScope()\n  }\n\n  removeToken() {\n    return this.scopeElement.removeToken()\n  }\n\n  get placeholder() {\n    return this.input.getAttribute('placeholder') || ''\n  }\n\n  set placeholder(value: string) {\n    this.input.setAttribute('placeholder', value)\n  }\n\n  get typeaheadPlaceholder() {\n    return findTarget(this, 'typeaheadPlaceholder')?.textContent || ''\n  }\n\n  set typeaheadPlaceholder(value: string) {\n    const placeholder = findTarget(this, 'typeaheadPlaceholder')!\n    placeholder.textContent = value\n  }\n\n  get value() {\n    return this.input?.value || ''\n  }\n\n  set value(value) {\n    this.input.value = value\n    this.typeahead = value\n    this.resetPlaceholder()\n    this.onInput()\n  }\n\n  get overlay() {\n    return this.overlayInput.value\n  }\n\n  set overlay(value: string) {\n    this.overlayInput.value = value\n  }\n\n  // For some reason the `@target` decorator isn't working in this element.\n  // Until we figure out why, we have these getters and setters to use `findTarget`,\n  // which @target uses under the hood anyway.\n  set mirror(value: string) {\n    const mirror = findTarget(this, 'mirror')!\n    mirror.textContent = value\n  }\n\n  get typeaheadText(): string {\n    const typeaheadText = findTarget(this, 'typeaheadText')!\n    return typeaheadText.textContent || ''\n  }\n\n  set typeaheadText(value: string) {\n    const typeaheadText = findTarget(this, 'typeaheadText')!\n    typeaheadText.textContent = value\n  }\n\n  get typeahead() {\n    return this.typeaheadValue\n  }\n\n  set typeahead(value) {\n    this.typeaheadValue = this.overlay + value\n    this.mirror = this.value\n\n    if (value === '') {\n      this.typeaheadText = ''\n    } else {\n      // when the typeahead is set, the placholder needs to be hidden\n      // so that the typeahead can be seen even when there's no query value\n      this.placeholder = ''\n      this.typeaheadPlaceholder = ''\n\n      if (this.valueStartsWithTypeahead) {\n        const offset = this.value.length - (this.overlay ? 1 : 0)\n        this.typeaheadText = value.substring(offset)\n      } else {\n        this.typeaheadText = ` \\u2013 ${value}`\n      }\n    }\n  }\n\n  showModePlaceholder(placeholderText = '') {\n    this.typeaheadPlaceholder = placeholderText\n  }\n\n  get valueStartsWithTypeahead() {\n    return this.typeaheadValue.toLowerCase().startsWith(this.value.toLowerCase())\n  }\n\n  get isCursorAtEnd() {\n    return this.value.length === this.input.selectionStart\n  }\n\n  set loading(isLoading: boolean) {\n    this.spinner.hidden = !isLoading\n    this.searchIcon.hidden = isLoading\n  }\n\n  resetScopeIfNeeded() {\n    if (!this.multiPageEnabled && this.value === '' && this.scope.id !== this.defaultScope.id) {\n      this.scope = this.defaultScope\n    }\n  }\n\n  resetPlaceholder() {\n    const valueWithoutPlaceholder = this.value.replace(this.overlay, '')\n\n    if (valueWithoutPlaceholder && this.overlay) {\n      this.typeaheadPlaceholder = ''\n    }\n\n    this.placeholder = this.getAttribute('placeholder') || ''\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onInput() {\n    this.resetPlaceholder()\n    this.clearButton.hidden = !this.hasSomethingToClear()\n\n    // Don't send a input event unless setup/connection is complete.\n    // This way we can modify the input during the `this.connectedCallback()` without consequence.\n    if (!this.connected) return\n    this._dispatchEvent('command-palette-input')\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onClear(event?: Event) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (event instanceof KeyboardEvent && event.key !== 'Escape') return\n\n    this.value = ''\n    this.input.focus()\n    this._dispatchEvent('command-palette-cleared')\n  }\n\n  /* eslint-disable-next-line custom-elements/no-method-prefixed-with-on */\n  onKeydown(event: KeyboardEvent) {\n    /* eslint eslint-comments/no-use: off */\n    /* eslint-disable no-restricted-syntax */\n    // There was something to \"select\" and user hit proper key\n    if (this.isSelectKeystroke(event.key)) {\n      this._dispatchEvent('command-palette-select')\n\n      event.stopImmediatePropagation()\n      event.preventDefault()\n    }\n\n    if (this.hasSomethingToClear() && isPlatformMetaKey(event) && event.key === 'Backspace') {\n      this.onClear()\n      return\n    }\n\n    // User hit backspace on empty input\n    if (\n      this.input.selectionStart === 0 &&\n      this.input.selectionEnd === 0 &&\n      (this.hasScope() || this.multiPageEnabled) &&\n      event.key === 'Backspace'\n    ) {\n      this._dispatchEvent('command-palette-descope')\n\n      event.stopImmediatePropagation()\n      event.preventDefault()\n      return\n    }\n    /* eslint-enable no-restricted-syntax */\n  }\n\n  hasSomethingToClear() {\n    return this.scopeElement.hasScope() || this.value.length > 0\n  }\n\n  isSelectKeystroke(key: string) {\n    return key === 'Tab' || (key === 'ArrowRight' && this.isCursorAtEnd)\n  }\n\n  textSelected() {\n    return this.input.selectionStart !== this.input.selectionEnd\n  }\n\n  /**\n   * Emit CustomEvent of given event name with detail containing input and typeahead value.\n   *\n   * @param eventName\n   * @returns void\n   */\n  _dispatchEvent(eventName: string) {\n    const event = new CustomEvent(eventName, {\n      cancelable: true,\n      detail: {\n        typeahead: this.typeahead,\n        value: this.value\n      }\n    })\n\n    return this.dispatchEvent(event)\n  }\n}\n","import './github/command-palette/mode-observer'\nimport './github/command-palette/pjax-metadata-helpers'\nimport './github/command-palette/command-palette-mode-element'\nimport './github/command-palette/command-palette-tip-element'\nimport './github/command-palette/command-palette-scope-element'\nimport './github/command-palette/command-palette-token-element'\nimport './github/command-palette/command-palette-item-group-element'\nimport './github/command-palette/command-palette-item-stack-element'\nimport './github/command-palette/provider-element'\nimport './github/command-palette/client-defined-provider-element'\nimport './github/command-palette/server-defined-provider-element'\nimport './github/command-palette/command-palette-help-element'\nimport './github/command-palette/items/server-defined-item'\nimport './github/command-palette/items/command-item'\nimport './github/command-palette/items/copyable-item'\nimport './github/command-palette/items/jump-to-item'\nimport './github/command-palette/items/jump-to-org-item'\nimport './github/command-palette/items/jump-to-team-item'\nimport './github/command-palette/items/search-link-item'\nimport './github/command-palette/items/access-policy-item'\nimport './github/command-palette/items/help-item'\nimport './github/command-palette/providers/server-defined-provider'\nimport './github/command-palette/providers/server-defined-provider-factory'\nimport './github/command-palette/providers/files-provider'\nimport './github/command-palette/providers/prefetched-provider'\nimport './github/command-palette/providers/search-links-provider'\nimport './github/command-palette/providers/main-window-commands-provider'\nimport './github/command-palette/providers/remote-provider'\nimport './github/command-palette/providers/help-provider'\nimport CommandPalette from './github/command-palette/command-palette-element'\nimport {CommandPaletteInputElement} from './github/command-palette/command-palette-input-element'\nimport {eventToHotkeyString} from '@github/hotkey'\nimport {fromEvent} from './github/subscription'\nimport {getCodeEditor} from './github/code-editor'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from 'selector-observer'\n\nif (!window.customElements.get(CommandPalette.tagName)) {\n  // eslint-disable-next-line custom-elements/valid-tag-name, custom-elements/tag-name-matches-class\n  window.customElements.define(CommandPalette.tagName, CommandPalette)\n}\n\n/**\n * Determines if the command palette exists. If so, attaches event listeners.\n * Otherwise, does nothing.\n *\n * Event listeners attached:\n * - 'toggle' on the command palette <details>\n * - 'keydown' on the document\n * - 'socket:message' on all '.js-socket-channel.js-updatable-content'\n */\nfunction observeCommandPalette() {\n  document.addEventListener('keydown', handleKeyDown)\n\n  observe('.js-command-palette-dialog', details => {\n    if (!details) return\n\n    const commandPalette = findCommandPalette()\n    if (!commandPalette) return\n\n    details.addEventListener('toggle', () => {\n      if ((details as HTMLDetailsElement).open) {\n        commandPalette.activate()\n      } else {\n        commandPalette.deactivate()\n      }\n    })\n  })\n\n  // Listen to live events, so that we can clear command caches.\n  observe('.js-socket-channel.js-updatable-content', {\n    subscribe: el =>\n      fromEvent(el, 'socket:message', () => {\n        const commandPalette = findCommandPalette()\n        if (!commandPalette) return\n\n        commandPalette.clearCommands(false)\n      })\n  })\n}\n\n/**\n * Finds the command palette on the page.\n * @returns the command palette if it's present, or null when it's not.\n *\n */\nfunction findCommandPalette(): CommandPalette | null {\n  return document.querySelector<CommandPalette>(CommandPalette.tagName)\n}\n\n/**\n * Handles site-wide keyboard shortcuts for the command palette.\n * Expects either of the following keydown events:\n * - `platform-meta` + `k`: Opens the command palette.\n * - `platform-meta` + `shift` + `k`: Opens the command palette in command mode.\n * - `platform-meta` + `alt/opt` + `k`:\n *   - When triggered from inside a markdown form, opens the command palette.\n *   - When triggered from outside a markdown form, no ops.\n *\n * @param event\n * @returns void\n */\nfunction handleKeyDown(event: KeyboardEvent): void {\n  if (!event.code) return\n\n  const commandPalette = findCommandPalette()\n  if (!commandPalette) return\n\n  const onMemexPage = triggeredInsideMemex()\n  const isCommandMode = hotkeyMatchesEvent(commandPalette.platformCommandModeHotkey, event)\n\n  // Activate the command palette if:\n  // - The user is not in a textarea or Markdown code editor and pressed an activation hotkey OR\n  // - The user is not on a Memex page (Memex has its own command palette right now) OR\n  // - The user pressed the secondary activation hotkey (which works everywhere) OR\n  // - The user has the `command_palette_on_memex` feature flag and pressed the Memex activation hotkey (temporary while Memex uses its own command palette)\n  const validPrimaryActivation =\n    !shouldIgnoreActivation(event) &&\n    !onMemexPage &&\n    (hotkeyMatchesEvent(commandPalette.platformActivationHotkey, event) || isCommandMode)\n\n  const validSecondaryActivation =\n    !onMemexPage && (hotkeyMatchesEvent(commandPalette.platformSecondardActivationHotkey, event) || isCommandMode)\n\n  const validMemexActivation =\n    commandPalette.hasAttribute('data-memex-hotkey-enabled') &&\n    onMemexPage &&\n    hotkeyMatchesEvent(commandPalette.platformMemexActivationHotkey, event)\n\n  if (validPrimaryActivation || validSecondaryActivation || validMemexActivation) {\n    toggleCommandPalette(isCommandMode)\n    event.preventDefault()\n    event.stopPropagation()\n  }\n}\n\n/**\n * Compares a known hotkey to a KeyboardEvent\n * @param hotkey\n * @param event\n * @returns boolean - whether any parts of the known hotkey string match the KeyboardEvent's hotkey string\n */\nfunction hotkeyMatchesEvent(hotkey: string, event: KeyboardEvent): boolean {\n  let hotkeyString = eventToHotkeyString(event)\n\n  // Mac platforms produce a ˚ character when Opt+K is pressed.\n  // We need to translate this to match our configured hotkeys.\n  hotkeyString = hotkeyString.replace('˚', 'k')\n\n  // multiple hotkeys can be declared with a comma separating them\n  // consider it a match if any of the segments matches the event hotkey string.\n  return hotkey.split(',').some(h => hotkeyString === h)\n}\n\n/**\n * Returns true when we should ignore activation because it is being used by a markdown form.\n * TODO: Update this to only apply to non-default (cmd+k) hotkeys.\n */\nfunction shouldIgnoreActivation(event: KeyboardEvent) {\n  return triggeredInsideAPreviewableCommentForm(event) || triggeredInsideAMarkdownCodeEditor(event)\n}\n\n/**\n * Checks if an event occurred within a previewable-comment-form.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a previewable-comment-form.\n */\nfunction triggeredInsideAPreviewableCommentForm(event: KeyboardEvent): boolean {\n  const inputTarget = event.target as HTMLInputElement\n\n  if (!inputTarget) return false\n\n  if (inputTarget.closest('.js-previewable-comment-form') !== null) return true\n\n  return false\n}\n\n/**\n * Checks if an event occurred within a codeEditor in markdown editing mode.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a codeEditor in markdown editing mode.\n */\nfunction triggeredInsideAMarkdownCodeEditor(event: KeyboardEvent): boolean {\n  const inputTarget = event.target as HTMLInputElement\n  if (!inputTarget) return false\n\n  const codeEditorElement = inputTarget.closest<HTMLTextAreaElement>('.js-code-editor')\n  if (!codeEditorElement) return false\n\n  const codeEditor = getCodeEditor(codeEditorElement)\n  if (!codeEditor) return false\n\n  const editor = codeEditor.editor\n  if (!editor) return false\n\n  const mode = editor.getMode().name\n  return mode === 'gfm' || mode === 'markdown'\n}\n\n/**\n * Checks if an event occurred within a memex.\n *\n * @param event\n * @returns boolean - whether the event was triggered from within a memex.\n */\nfunction triggeredInsideMemex(): boolean {\n  const memexRoot = document.querySelector<HTMLElement>('#memex-root')\n\n  if (!memexRoot) return false\n\n  return true\n}\n\n/**\n * Toggles the command palette. The command palette can be toggled on when closed, and off when open.\n * You can also toggle bewteen the modeless command palette and the command mode.\n *\n * @param enableCommandMode – set to true to open in command mode\n * @returns void\n */\nfunction toggleCommandPalette(enableCommandMode: boolean): void {\n  for (const details of document.querySelectorAll<HTMLDetailsElement>('.js-command-palette-dialog')) {\n    const commandPaletteInput = details.querySelector<CommandPaletteInputElement>(CommandPaletteInputElement.tagName)\n\n    if (!commandPaletteInput) return\n\n    if (details.open) {\n      details.open = false\n    } else {\n      toggleCommandMode(commandPaletteInput, enableCommandMode)\n\n      const commandPalette = details.querySelector<CommandPalette>(CommandPalette.tagName)\n\n      if (commandPalette) {\n        commandPalette.previouslyActiveElement = document.activeElement as HTMLElement\n      }\n\n      details.open = true\n    }\n  }\n}\n\n/**\n * Toggles the command palette bewteen the modeless command palette and the command mode\n *\n * @param commandPaletteInput – the command palette input element\n * @param enableCommandMode – set to true to open in command mode\n * @returns boolean - whether the mode command mode was toggled on or off\n */\nfunction toggleCommandMode(commandPaletteInput: CommandPaletteInputElement, enableCommandMode: boolean): boolean {\n  const commandModeActive = commandPaletteInput.value.startsWith('>')\n\n  if (enableCommandMode && !commandModeActive) {\n    commandPaletteInput.value = `>${commandPaletteInput.value}`\n    return true\n  } else if (!enableCommandMode && commandModeActive) {\n    commandPaletteInput.value = commandPaletteInput.value.substring(1)\n    return true\n  } else {\n    return false\n  }\n}\n\n// register on initial page load\nobserveCommandPalette()\n","import type {CodeEditor} from './editor/code-editor'\n// eslint-disable-next-line no-restricted-imports\nimport {on} from 'delegated-events'\n\nconst editors: WeakMap<HTMLElement, CodeEditor> = new WeakMap()\n\nexport function getCodeEditor(el: HTMLElement): CodeEditor | undefined {\n  return editors.get(el)\n}\n\nexport async function getAsyncCodeEditor(el: HTMLElement): Promise<CodeEditor> {\n  return editors.get(el) || onEditorFromEvent(await nextEvent(el, 'codeEditor:ready'))\n}\n\nfunction onEditorFromEvent(event: Event): CodeEditor {\n  if (!(event instanceof CustomEvent)) throw new Error('assert: event is not a CustomEvent')\n  const editor: CodeEditor = event.detail.editor\n  if (!event.target) throw new Error('assert: event.target is null')\n  editors.set(event.target as HTMLElement, editor)\n  return editor\n}\n\non('codeEditor:ready', '.js-code-editor', onEditorFromEvent)\n\nfunction nextEvent(target: EventTarget, event: string): Promise<Event> {\n  return new Promise(resolve => {\n    target.addEventListener(event, resolve, {once: true})\n  })\n}\n","export type ColorMode = 'light' | 'dark'\nexport type ColorModeWithAuto = ColorMode | 'auto'\n\nexport function getPreferredColorMode(): ColorMode | undefined {\n  if (prefersColorScheme('dark')) {\n    return 'dark'\n  } else if (prefersColorScheme('light')) {\n    return 'light'\n  }\n\n  return undefined\n}\n\nfunction prefersColorScheme(scheme: ColorMode): boolean {\n  return window.matchMedia && window.matchMedia(`(prefers-color-scheme: ${scheme})`).matches\n}\n\n/**\n * Set the `data-color-mode` attribute on the html element of the page.\n */\nexport function setClientMode(mode: ColorModeWithAuto) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  rootEl.setAttribute('data-color-mode', mode)\n}\n\nexport function setClientTheme(theme: string, type: ColorMode) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  rootEl.setAttribute(`data-${type}-theme`, theme)\n}\n\n/**\n * Returns the user theme as defined by the `data-light-theme` or\n * `data-dark-theme` attribute.\n */\nexport function getClientTheme(type: ColorMode) {\n  const rootEl = document.querySelector('html[data-color-mode]')\n  if (!rootEl) {\n    // Color modes are not active on this page\n    return\n  }\n  return rootEl.getAttribute(`data-${type}-theme`)\n}\n","import memoize from '@github/memoize'\n\nconst features = memoize(enabledFeatures)\n\nfunction enabledFeatures(): string[] {\n  return (document.head?.querySelector<HTMLMetaElement>('meta[name=\"enabled-features\"]')?.content || '').split(',')\n}\n\nconst isFeatureEnabled = memoize(isEnabled)\n\nfunction isEnabled(name: string): boolean {\n  return features().indexOf(name) !== -1\n}\n\nexport {isFeatureEnabled}\n","// TODO: Research replacing this module with a composable observable library.\n// The scope of this module simply returns a finalized subscription object.\n\n// Lightweight TC39 observable Subscription.\nexport class Subscription {\n  constructor(cleanup: () => void) {\n    this.closed = false\n    this.unsubscribe = () => {\n      cleanup()\n      this.closed = true\n    }\n  }\n\n  // A boolean value indicating whether the subscription is closed.\n  closed: boolean\n  // Cancels the subscription.\n  unsubscribe: () => void\n}\n\n// Create a Subscription from an event.\nexport function fromEvent(\n  target: EventTarget,\n  eventName: string,\n  onNext: EventListenerOrEventListenerObject,\n  options: AddEventListenerOptions = {capture: false}\n): Subscription {\n  target.addEventListener(eventName, onNext, options)\n  return new Subscription(() => {\n    target.removeEventListener(eventName, onNext, options)\n  })\n}\n\n// Combine several subscriptions into a single subscription.\n//\n// subscriptions - A list of subscriptions to combine.\n//\n// Returns a single, combined, subscription.\nexport function compose(...subscriptions: Subscription[]): Subscription {\n  return new Subscription(() => {\n    for (const subscription of subscriptions) {\n      subscription.unsubscribe()\n    }\n  })\n}\n"],"sourceRoot":""}